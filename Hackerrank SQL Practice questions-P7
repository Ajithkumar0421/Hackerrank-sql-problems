Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
The STATION table is described as follows:

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.

Sample Input

For example, CITY has four entries: DEF, ABC, PQRS and WXY.

Sample Output

ABC 3
PQRS 4
Explanation

When ordered alphabetically, the CITY names are listed as ABC, DEF, PQRS, and WXY, with lengths  and . The longest name is PQRS, but there are  options for shortest named city. Choose ABC, because it comes first alphabetically.

Note
You can write two separate queries to get the desired output. It need not be a single query.

answer:
select city,length(city) from station order by length(city), city limit 1;
select city,length(city) from station order by length(city)desc, city limit 1;

query breakdown:
Since its written in the problem itself that you can use two separate queries, hence we’ll use two queries.
length(column_name) => Provides length of entries in a column. for eg: For an entry ‘INDIA’ under column name COUNTRY, length(COUNTRY) will give 5 as the result value.
order by column_name=> sort the value in ascending or descending order. By default sorting is done in ascending order.
limit n=> limits the total observation up to n. for e.g: limit 10 will have 10 observations starting from the top.
First select desired columns.

select CITY, length(CITY) from STATION;
Above query will give you all the cities and their respective lengths. However, we need only one entry having shortest city name.

select CITY, length(CITY) from STATION order by length(CITY);
Above query will give city names and lengths sorted according to city lengths in ascending order(shortest city name at the top and longest city name at the bottom). But what if two city names are of equal lengths(for e.g: Oakfield and Netawaka)? Then, as asked in the problem, we have to sort it alphabetically in ascending order.

select CITY, length(CITY) from STATION order by length(CITY), CITY;
But we need only the top entry. Here, we’ll use limit 1 to get the top most row of the table.

select CITY, length(CITY) from STATION order by length(CITY), CITY limit 1;
Similarly, to get the city having longest name, we can use desc with order by.

select CITY, length(CITY) from STATION order by length(CITY) desc, CITY limit 1;
NOTE: order by column_name is same as order by column_name asc

